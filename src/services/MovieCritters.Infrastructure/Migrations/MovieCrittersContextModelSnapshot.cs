// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieCritters.Infrastructure.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MovieCritters.Infrastructure.Migrations
{
    [DbContext(typeof(MovieCrittersContext))]
    partial class MovieCrittersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MovieCritters.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("EndYear")
                        .HasColumnType("int")
                        .HasColumnName("end_year");

                    b.Property<string[]>("Genres")
                        .HasColumnType("text[]")
                        .HasColumnName("genres");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("image_url");

                    b.Property<string>("ImdbId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("imdb_id");

                    b.Property<bool>("IsAdult")
                        .HasColumnType("boolean")
                        .HasColumnName("is_adult");

                    b.Property<string>("OriginalTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("original_title");

                    b.Property<float>("Rating")
                        .HasColumnType("real")
                        .HasColumnName("rating");

                    b.Property<int>("RuntimeMinutes")
                        .HasColumnType("int")
                        .HasColumnName("runtime_minutes");

                    b.Property<int>("StartYear")
                        .HasColumnType("int")
                        .HasColumnName("start_year");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_movies");

                    b.HasIndex("ImdbId")
                        .IsUnique()
                        .HasDatabaseName("ix_movies_imdb_id");

                    b.ToTable("movies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("99a90b80-db93-4f76-a012-cbdadc878f62"),
                            CreatedAt = new DateTime(2022, 10, 13, 0, 26, 10, 560, DateTimeKind.Utc).AddTicks(5830),
                            Genres = new[] { "Drama" },
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/2/26/One_Flew_Over_the_Cuckoo%27s_Nest_poster.jpg",
                            ImdbId = "tt0073486",
                            IsAdult = false,
                            OriginalTitle = "One Flew Over the Cuckoo's Nest",
                            Rating = 4.7f,
                            RuntimeMinutes = 133,
                            StartYear = 1975,
                            Title = "One Flew Over the Cuckoo's Nest",
                            Type = "movie",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("99a90b80-db93-4f76-a012-cbdadc878f63"),
                            CreatedAt = new DateTime(2022, 10, 13, 0, 26, 10, 560, DateTimeKind.Utc).AddTicks(5849),
                            Genres = new[] { "Adventure", "Animation", "Comedy" },
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/8/86/Brother_Bear_Poster.png",
                            ImdbId = "tt0328880",
                            IsAdult = false,
                            OriginalTitle = "Brother Bear",
                            Rating = 4.5f,
                            RuntimeMinutes = 85,
                            StartYear = 2003,
                            Title = "Brother Bear",
                            Type = "movie",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("99a90b80-db93-4f76-a012-cbdadc878f64"),
                            CreatedAt = new DateTime(2022, 10, 13, 0, 26, 10, 560, DateTimeKind.Utc).AddTicks(5853),
                            Genres = new[] { "Action", "Adventure", "Sci-Fi" },
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/0/02/Spider-Man_2_Poster.jpg",
                            ImdbId = "tt0316654",
                            IsAdult = false,
                            OriginalTitle = "Spider-Man 2",
                            Rating = 4.1f,
                            RuntimeMinutes = 127,
                            StartYear = 2004,
                            Title = "Spider-Man 2",
                            Type = "movie",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("99a90b80-db93-4f76-a012-cbdadc878f65"),
                            CreatedAt = new DateTime(2022, 10, 13, 0, 26, 10, 560, DateTimeKind.Utc).AddTicks(5856),
                            Genres = new[] { "Action", "Adventure", "Drama" },
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/f/fb/Gladiator_%282000_film_poster%29.png",
                            ImdbId = "tt0172495",
                            IsAdult = false,
                            OriginalTitle = "Gladiator",
                            Rating = 4.8f,
                            RuntimeMinutes = 155,
                            StartYear = 2000,
                            Title = "Gladiator",
                            Type = "movie",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
